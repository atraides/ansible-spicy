---
- name: Check if we have SSH keys for {{ ansible_user_id }}
  ansible.builtin.stat:
    path: "{{ spicy_ssh_keys_folder }}"
  register: spicy_authorized_keys_folder
  delegate_to: 127.0.0.1
  run_once: True

- name: Check if we have SSH configuration for {{ ansible_user_id }}
  ansible.builtin.stat:
    path: "{{ spicy_ssh_config_folder }}"
  register: spicy_ssh_config_folder_info
  delegate_to: 127.0.0.1
  run_once: True

- name: Check if we have SSH private keys for {{ ansible_user_id }}
  ansible.builtin.stat:
    path: "{{ spicy_private_key_folder }}"
  register: spicy_private_key_folder_stats
  delegate_to: 127.0.0.1
  run_once: True

- name: Collect SSH keys for {{ ansible_user_id }}
  set_fact:
    spicy_authorized_keys: "{{ lookup('fileglob', '{{ spicy_ssh_keys_folder }}/*.pub', wantlist=True) }}"
  when: spicy_authorized_keys_folder.stat.exists
  delegate_to: 127.0.0.1
  run_once: True

- name: Collect SSH private keys for {{ ansible_user_id }}
  set_fact:
    spicy_private_key_files: "{{ lookup('fileglob', '{{ spicy_private_key_folder }}/*', wantlist=True) | reject('match', spicy_public_key_regex) | list }}"
  when: spicy_private_key_folder_stats.stat.exists
  delegate_to: 127.0.0.1
  run_once: True

- name: Setup authorized keys for {{ ansible_user_id }}
  authorized_key:
    user: "{{ ansible_user_id }}"
    key: "{{ item }}"
  with_file: "{{ spicy_authorized_keys }}"
  when: spicy_authorized_keys | length > 0

- name: Collect SSH private keys for {{ ansible_user_id }} to use with keychain
  set_fact:
    spicy_private_keys: "{{ spicy_private_keys + [ item  | regex_replace('^(?P<path>.*)/(?P<keyname>.*)$', '\\g<keyname>') ] }}"
  loop: "{{ spicy_private_key_files }}"
  when: spicy_private_key_files | length > 0

- name: Install SSH private keys for {{ ansible_user_id }}
  copy:
    src: "{{ spicy_private_key_folder }}/{{ item }}"
    dest: ~/.ssh
    owner: "{{ ansible_user_id }}"
    mode: preserve
  loop: "{{ spicy_private_keys }}"
  when: spicy_private_keys | length > 0

- name: Install the required public keys for {{ ansible_user_id }}
  copy:
    src: "{{ spicy_private_key_folder }}/{{ item }}.pub"
    dest: ~/.ssh
    owner: "{{ ansible_user_id }}"
    mode: preserve
  loop: "{{ spicy_private_keys }}"
  when: spicy_private_keys | length > 0

- name: Install the SSH user configuration for {{ ansible_user_id }}
  copy:
    src: "{{ spicy_ssh_config_folder }}/config"
    dest: ~/.ssh
    owner: "{{ ansible_user_id }}"
    mode: "0644"
  when: spicy_ssh_config_folder_info.stat.exists
     