---
- name: Oh My Zsh | Check if .zshrc exists
  stat:
    path: ~/.zshrc
  register: spicy_zshrc_results

- name: Oh My Zsh | Check if .oh-my-zsh exists
  stat:
    path: ~/.oh-my-zsh
  register: spicy_ohmyzsh_dir_results

- name: Oh My Zsh | Cloning Oh My Zsh
  git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    depth: 1
    dest: ~/.oh-my-zsh
  when: not spicy_ohmyzsh_dir_results.stat.exists

- name: Oh My Zsh | Creating new ~/.zshrc
  ansible.builtin.copy:
    src: ~/.oh-my-zsh/templates/zshrc.zsh-template
    dest: ~/.zshrc
    remote_src: yes
  when: not spicy_zshrc_results.stat.exists

- name: Oh My Zsh | Copy file with owner and permissions
  ansible.builtin.copy:
    src: files/.oh-my-zsh/custom/plugins/pyenv.plugin.zsh
    dest: ~/.oh-my-zsh/custom/plugins/pyenv.plugin.zsh
    owner: "{{ ansible_user_id }}"
    mode: "0640"

- name: "Oh My Zsh | Enable plugins"
  lineinfile:
    dest: "~{{ ansible_user_id }}/.zshrc"
    regexp: "^plugins=(.*).*$"
    line: "plugins=({{ ohmyzsh_plugins | join(' ') }})"
    state: present
    owner: "{{ ansible_user_id }}"
    create: no

- name: "Oh My Zsh | Enable the quiet option for keychain"
  lineinfile:
    dest: "~{{ ansible_user_id }}/.zshrc"
    regexp: "zstyle :omz:plugins:keychain {{ item }}"
    insertbefore: "^plugins=(.*).*$"
    line: "zstyle :omz:plugins:keychain {{ item }}"
    state: present
    owner: "{{ ansible_user_id }}"
    create: no
  loop: "{{ ohmyzsh_keychain_options }}"
  when: spicy_keychain | bool
